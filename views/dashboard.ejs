
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TodoPro Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    /* Enhanced Google-inspired design principles */
    :root {
      --primary-color: #4285f4;
      --primary-hover: #357ae8;
      --primary-light: #e8f2ff;
      --secondary-color: #fbbc05;
      --secondary-hover: #f5b300;
      --success-color: #34a853;
      --success-light: #e8f5e8;
      --danger-color: #ea4335;
      --danger-light: #fce8e6;
      --warning-color: #fbbc05;
      --background-color: #f8f9fa;
      --background-gradient: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
      --card-bg: #ffffff;
      --card-gradient: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
      --text-color: #3c4043;
      --text-secondary: #5f6368;
      --light-text-color: #70757a;
      --border-color: #e0e0e0;
      --shadow-sm: 0 1px 2px rgba(60,64,67,.3), 0 1px 3px rgba(60,64,67,.15);
      --shadow-md: 0 2px 4px rgba(60,64,67,.1), 0 1px 3px rgba(60,64,67,.1);
      --shadow-lg: 0 4px 8px rgba(60,64,67,.12), 0 2px 4px rgba(60,64,67,.08);
      --shadow-xl: 0 8px 16px rgba(60,64,67,.15), 0 4px 8px rgba(60,64,67,.1);
      --border-radius: 12px;
      --border-radius-lg: 16px;
      --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      --transition-fast: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
      --accent-color: #ea4335;
      --info-color: #0dcaf0;
    }
    body {
      background: var(--background-gradient);
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
      color: var(--text-color);
      line-height: 1.6;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      scroll-behavior: smooth;
    }

    /* Navbar styling removed to use standard navbar partial */

    .main-container {
      padding: 2rem 1rem;
      max-width: 1400px;
      margin: 0 auto;
    }

    /* Enhanced responsive design */
    @media (max-width: 576px) {
      .main-container {
        padding: 1rem 0.5rem;
      }
    }

    @media (min-width: 768px) {
      .main-container {
        padding: 2rem 1.5rem;
      }
    }

    @media (min-width: 1200px) {
      .main-container {
        padding: 2.5rem 2rem;
      }
    }
    .card {
      border: none;
      border-radius: var(--border-radius);
      box-shadow: var(--shadow-sm);
      background: var(--card-gradient);
      transition: var(--transition);
    }
    .card:hover {
      box-shadow: var(--shadow-lg);
      transform: translateY(-4px);
    }
    .card-header {
      background-color: transparent;
      border-bottom: 1px solid #e0e0e0;
      font-size: 1.25rem;
      font-weight: 600;
      color: var(--text-color);
      padding: 1.25rem 1.5rem;
    }
    .btn-primary {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
      font-weight: 500;
      border-radius: 8px;
    }
    .btn-primary:hover {
      background-color: #357ae8;
      border-color: #357ae8;
    }
    .btn-warning {
      background-color: var(--secondary-color);
      border-color: var(--secondary-color);
      color: var(--text-color);
      font-weight: 500;
      border-radius: 8px;
    }
    .btn-warning:hover {
      background-color: #f5b300;
      border-color: #f5b300;
    }
    .form-control, .form-select {
      border-radius: 8px;
      padding: 0.75rem 1rem;
    }
    .task-list {
      list-style: none;
      padding: 0;
    }
    .task-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1.25rem 1.5rem;
      background: var(--card-gradient);
      border: 1px solid var(--border-color);
      border-radius: var(--border-radius);
      margin-bottom: 1rem;
      transition: var(--transition);
      position: relative;
      overflow: hidden;
    }
    .task-item::after {
      content: '';
      position: absolute;
      top: -4px;
      left: -4px;
      right: -4px;
      bottom: -4px;
      background: linear-gradient(45deg, #a8d8ea, #a8e6cf, #f9f7d9, #ffb3ba);
      background-size: 400% 400%;
      border-radius: 16px;
      z-index: -1;
      animation: aiModalBorderMove 6s ease-in-out infinite;
      opacity: 0.4;
      filter: blur(8px);
      transition: all 1s ease-in-out;
    }
    .task-item:hover::after {
      opacity: 0.7;
      filter: blur(10px);
    }

    .task-item::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 4px;
      height: 100%;
      background: var(--primary-color);
      opacity: 0;
      transition: var(--transition-fast);
    }

    .task-item:hover {
      box-shadow: var(--shadow-lg);
      transform: translateY(-2px);
      border-color: var(--primary-color);
    }

    .task-item:hover::before {
      opacity: 1;
    }

    .task-item.completed {
      opacity: 0.7;
      background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    }

    .task-item.completed:hover {
      opacity: 0.8;
    }
    .task-content {
      flex-grow: 1;
    }
    .task-title {
      font-size: 1.1rem;
      font-weight: 500;
      margin-bottom: 0.25rem;
    }
    .task-meta {
      font-size: 0.85rem;
      color: var(--light-text-color);
    }
    .badge-priority {
      font-size: 0.75rem;
      padding: 0.4em 0.8em;
      border-radius: 12px;
      font-weight: 600;
      margin-right: 8px;
    }
    .badge-high { background-color: var(--danger-color); color: #fff; }
    .badge-medium { background-color: var(--secondary-color); color: #fff; }
    .badge-low { background-color: var(--primary-color); color: #fff; }
    .tag-pill {
      display: inline-block;
      background-color: #e8e8e8;
      color: #5f6368;
      padding: 0.25rem 0.75rem;
      border-radius: 12px;
      font-size: 0.75rem;
      margin-right: 5px;
      margin-top: 5px;
    }
    .actions-group .btn {
      border-radius: 50%;
      width: 40px;
      height: 40px;
      padding: 0;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      transition: var(--transition-fast);
      position: relative;
      overflow: hidden;
    }

    .actions-group .btn::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 0;
      height: 0;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 50%;
      transform: translate(-50%, -50%);
      transition: var(--transition-fast);
    }

    .actions-group .btn:hover::before {
      width: 100%;
      height: 100%;
    }

    .actions-group .btn:hover {
      transform: scale(1.1);
      box-shadow: var(--shadow-md);
    }

    .actions-group .btn-success:hover {
      background-color: var(--success-color);
      border-color: var(--success-color);
    }

    .actions-group .btn-info:hover {
      background-color: #0dcaf0;
      border-color: #0dcaf0;
    }

    .actions-group .btn-danger:hover {
      background-color: var(--danger-color);
      border-color: var(--danger-color);
    }
    .task-title.completed {
      text-decoration: line-through;
      color: var(--light-text-color);
    }
    .modal-content {
      border-radius: 12px;
    }
    .modal-header {
      border-bottom: none;
    }
    .modal-footer {
      border-top: none;
    }
    .filter-sort-bar {
      background-color: var(--card-bg);
      padding: 1.5rem;
      border-radius: 12px;
      box-shadow: var(--shadow-sm);
      margin-bottom: 1.5rem;
    }
    @media (min-width: 992px) {
      .main-container {
        padding: 2rem;
      }
    }

    /* AI Suggestions Styles */
    .ai-suggestions {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .ai-toggle-btn {
      background: none;
      border: none;
      cursor: pointer;
      padding: 0.5rem;
      border-radius: 50%;
      transition: var(--transition-fast);
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      overflow: hidden;
    }

    .ai-toggle-btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      border-radius: 50%;
      background: linear-gradient(45deg, #4285f4, #34a853, #fbbc05, #ea4335);
      opacity: 0;
      transition: opacity 0.3s ease;
      z-index: -1;
    }

    .ai-toggle-btn:hover {
      transform: scale(1.05);
    }

    .ai-toggle-btn:hover::before {
      opacity: 0.2;
    }

    .ai-toggle-btn.active {
      background: linear-gradient(135deg, #4285f4 0%, #34a853 100%);
      color: white;
      box-shadow: 0 0 20px rgba(66, 133, 244, 0.4);
    }

    .ai-toggle-btn.active .ai-icon {
      color: white;
      animation: aiPulse 2s infinite, aiGlow 3s infinite;
    }

    .ai-toggle-btn.disabled {
      background: var(--danger-color);
      color: var(--text-secondary);
    }

    .ai-toggle-btn.disabled .ai-icon {
      color: var(--text-secondary);
    }

    .ai-icon {
      font-size: 1.2rem;
      transition: var(--transition-fast);
      position: relative;
      z-index: 1;
    }

    @keyframes aiPulse {
      0%, 100% {
        opacity: 1;
        transform: scale(1);
      }
      50% {
        opacity: 0.8;
        transform: scale(1.1);
      }
    }

    @keyframes aiGlow {
      0%, 100% {
        filter: drop-shadow(0 0 5px rgba(66, 133, 244, 0.5));
      }
      25% {
        filter: drop-shadow(0 0 10px rgba(52, 168, 83, 0.6));
      }
      50% {
        filter: drop-shadow(0 0 15px rgba(251, 188, 5, 0.7));
      }
      75% {
        filter: drop-shadow(0 0 10px rgba(234, 67, 53, 0.6));
      }
    }

    /* AI Background Effects */
    body.ai-enabled {
      position: relative;
      animation: aiPageGlow 2s ease-in-out infinite alternate;
    }

    body.ai-enabled::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: radial-gradient(circle at 20% 80%, rgba(66, 133, 244, 0.03) 0%, transparent 50%),
                  radial-gradient(circle at 80% 20%, rgba(52, 168, 83, 0.03) 0%, transparent 50%),
                  radial-gradient(circle at 40% 40%, rgba(251, 188, 5, 0.02) 0%, transparent 50%);
      pointer-events: none;
      z-index: -1;
      animation: aiBackgroundPulse 4s infinite;
    }

    @keyframes aiPageGlow {
      0% {
        filter: brightness(1);
      }
      100% {
        filter: brightness(1.02);
      }
    }

    @keyframes aiBackgroundPulse {
      0%, 100% {
        opacity: 0.3;
      }
      50% {
        opacity: 0.6;
      }
    }

    /* AI Particles Effect */
    .ai-particles {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      pointer-events: none;
      overflow: hidden;
      z-index: -1;
    }

    .ai-particle {
      position: absolute;
      width: 4px;
      height: 4px;
      background: #4285f4;
      border-radius: 50%;
      opacity: 0;
      animation: aiParticleFloat 6s infinite linear;
    }

    .ai-particle:nth-child(2n) {
      background: #34a853;
      animation-duration: 8s;
      animation-delay: 1s;
    }

    .ai-particle:nth-child(3n) {
      background: #fbbc05;
      animation-duration: 7s;
      animation-delay: 2s;
    }

    .ai-particle:nth-child(4n) {
      background: #ea4335;
      animation-duration: 9s;
      animation-delay: 3s;
    }

    @keyframes aiParticleFloat {
      0% {
        opacity: 0;
        transform: translateY(100vh) rotate(0deg);
      }
      10% {
        opacity: 0.6;
      }
      90% {
        opacity: 0.6;
      }
      100% {
        opacity: 0;
        transform: translateY(-100px) rotate(360deg);
      }
    }

    /* AI Suggestions Animations */
    .suggestions-dropdown.show {
      animation: aiDropdownSlideIn 0.3s ease-out;
    }

    .suggestion-item {
      animation: aiSuggestionFadeIn 0.4s ease-out forwards;
      opacity: 0;
      transform: translateY(10px);
    }

    .suggestion-item:nth-child(1) { animation-delay: 0.1s; }
    .suggestion-item:nth-child(2) { animation-delay: 0.2s; }
    .suggestion-item:nth-child(3) { animation-delay: 0.3s; }
    .suggestion-item:nth-child(4) { animation-delay: 0.4s; }
    .suggestion-item:nth-child(5) { animation-delay: 0.5s; }

    @keyframes aiDropdownSlideIn {
      0% {
        opacity: 0;
        transform: translateY(-10px) scale(0.95);
      }
      100% {
        opacity: 1;
        transform: translateY(0) scale(1);
      }
    }

    @keyframes aiSuggestionFadeIn {
      0% {
        opacity: 0;
        transform: translateY(10px);
      }
      100% {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* AI Page Animations */
    body.ai-enabled .card {
      animation: aiCardGlow 3s ease-in-out infinite alternate;
    }

    body.ai-enabled .task-item {
      animation: aiTaskFloat 4s ease-in-out infinite alternate;
    }

    /* AI Modal Glow */
    body.ai-enabled .material-modal {
      position: relative;
      animation: aiModalGlow 2s ease-in-out infinite alternate;
    }

    body.ai-enabled .material-modal::before {
      content: '';
      position: absolute;
      top: -4px;
      left: -4px;
      right: -4px;
      bottom: -4px;
      background: linear-gradient(45deg, #4285f4, #34a853, #fbbc05, #ea4335);
      background-size: 400% 400%;
      border-radius: 32px;
      z-index: -1;
      animation: aiModalBorderMove 3s ease-in-out infinite;
      opacity: 0.8;
      filter: blur(8px);
    }

    @keyframes aiCardGlow {
      0% {
        box-shadow: var(--shadow-sm);
      }
      100% {
        box-shadow: 0 4px 20px rgba(66, 133, 244, 0.1), 0 2px 8px rgba(52, 168, 83, 0.05);
      }
    }

    @keyframes aiTaskFloat {
      0% {
        transform: translateY(0);
      }
      100% {
        transform: translateY(-2px);
      }
    }

    @keyframes aiModalGlow {
      0% {
        filter: brightness(1);
      }
      100% {
        filter: brightness(1.05);
      }
    }

    @keyframes aiModalBorderMove {
      0% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 50%;
      }
      100% {
        background-position: 0% 50%;
      }
    }

    .ai-tooltip {
      font-size: 0.75rem;
      color: var(--text-secondary);
      background: var(--card-bg);
      padding: 0.25rem 0.5rem;
      border-radius: 4px;
      border: 1px solid var(--border-color);
      opacity: 0;
      transform: translateY(-5px);
      transition: var(--transition-fast);
      pointer-events: none;
      position: absolute;
      top: -35px;
      right: 0;
      white-space: nowrap;
      box-shadow: var(--shadow-sm);
    }

    .ai-suggestions:hover .ai-tooltip {
      opacity: 1;
      transform: translateY(0);
    }

    .ai-status-indicator {
      position: absolute;
      top: 4px;
      right: 4px;
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: var(--success-color);
      border: 2px solid white;
      box-shadow: 0 0 0 1px var(--border-color);
    }

    .ai-toggle-btn.disabled .ai-status-indicator {
      background: var(--danger-color);
    }

    .suggestions-dropdown {
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      background: var(--card-bg);
      border: 1px solid var(--border-color);
      border-radius: var(--border-radius);
      box-shadow: var(--shadow-lg);
      max-height: 200px;
      overflow-y: auto;
      z-index: 1000;
      display: none;
    }

    .suggestions-dropdown.show {
      display: block;
    }

    .suggestion-item {
      padding: 0.75rem 1rem;
      cursor: pointer;
      border-bottom: 1px solid var(--border-color);
      transition: var(--transition-fast);
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .suggestion-item:last-child {
      border-bottom: none;
    }

    .suggestion-item:hover,
    .suggestion-item.active {
      background: var(--primary-light);
      color: var(--primary-color);
    }

    .suggestion-item .suggestion-icon {
      font-size: 0.8rem;
      color: var(--text-secondary);
    }

    .suggestion-item .suggestion-text {
      flex-grow: 1;
    }

    .suggestion-item .suggestion-type {
      font-size: 0.7rem;
      color: var(--text-secondary);
      background: var(--background-color);
      padding: 0.2rem 0.4rem;
      border-radius: 3px;
    }

    .suggestion-content {
      width: 100%;
    }

    .suggestion-header {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      margin-bottom: 0.25rem;
    }

    .suggestion-description {
      font-size: 0.8rem;
      color: var(--text-secondary);
      margin-bottom: 0.25rem;
      line-height: 1.3;
    }

    .suggestion-tags {
      display: flex;
      gap: 0.25rem;
      flex-wrap: wrap;
    }

    .suggestion-tags .tag-pill {
      font-size: 0.7rem;
      padding: 0.15rem 0.4rem;
      margin: 0;
    }

    .position-relative {
      position: relative;
    }



    /* Pastel color schemes for task sections */
    .pending-card {
      background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
      border: 1px solid #90caf9;
    }
    .completed-card {
      background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);
      border: 1px solid #81c784;
    }
    .shared-card {
      background: linear-gradient(135deg, #fce4ec 0%, #f8bbd9 100%);
      border: 1px solid #f48fb1;
    }

    /* Google Material 3 Expressive Styles for Modals */
    .material-modal {
      border-radius: 28px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12), 0 2px 6px rgba(0, 0, 0, 0.08);
      border: none;
      background: linear-gradient(135deg, #ffffff 0%, #fafafa 100%);
    }

    .material-header {
      background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
      border-bottom: 1px solid rgba(0, 0, 0, 0.08);
      padding: 24px 32px;
      border-radius: 28px 28px 0 0;
    }

    .material-title {
      font-family: 'Google Sans', 'Roboto', sans-serif;
      font-weight: 500;
      font-size: 1.5rem;
      color: #202124;
      letter-spacing: 0.01em;
    }

    .material-close {
      background: none;
      border: none;
      width: 24px;
      height: 24px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
      color: #5f6368;
    }

    .material-close:hover {
      background: rgba(95, 99, 104, 0.1);
      transform: scale(1.1);
    }

    .material-body {
      padding: 32px;
      background: #ffffff;
    }

    .material-label {
      font-family: 'Google Sans', 'Roboto', sans-serif;
      font-weight: 500;
      font-size: 0.875rem;
      color: #202124;
      margin-bottom: 8px;
      letter-spacing: 0.01em;
    }

    .material-input, .material-textarea, .material-select {
      border: 1px solid rgba(0, 0, 0, 0.12);
      border-radius: 16px;
      padding: 16px 20px;
      font-family: 'Google Sans', 'Roboto', sans-serif;
      font-size: 1rem;
      color: #202124;
      background: #ffffff;
      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
      box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.08);
      position: relative;
    }

    .material-input::after {
      content: '';
      position: absolute;
      top: -4px;
      left: -4px;
      right: -4px;
      bottom: -4px;
      background: linear-gradient(45deg, #a8d8ea, #a8e6cf, #f9f7d9, #ffb3ba);
      background-size: 400% 400%;
      border-radius: 20px;
      z-index: -1;
      animation: aiModalBorderMove 6s ease-in-out infinite;
      opacity: 0;
      filter: blur(8px);
      transition: all 1s ease-in-out;
    }

    .material-input:focus::after {
      opacity: 0.7;
      filter: blur(10px);
    }

    .material-input:focus, .material-textarea:focus, .material-select:focus {
      border-color: #4285f4;
      box-shadow: 0 0 0 2px rgba(66, 133, 244, 0.1), inset 0 1px 3px rgba(0, 0, 0, 0.08);
      outline: none;
    }

    .material-textarea {
      resize: vertical;
      min-height: 80px;
    }

    .material-select {
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
      background-position: right 0.75rem center;
      background-repeat: no-repeat;
      background-size: 1rem;
      padding-right: 2.5rem;
    }

    .material-footer {
      background: #f8f9fa;
      border-top: 1px solid rgba(0, 0, 0, 0.08);
      padding: 24px 32px;
      border-radius: 0 0 28px 28px;
      display: flex;
      justify-content: flex-end;
      gap: 12px;
    }

    .material-btn-primary {
      background: linear-gradient(135deg, #4285f4 0%, #1a73e8 100%);
      border: none;
      border-radius: 20px;
      padding: 12px 24px;
      font-family: 'Google Sans', 'Roboto', sans-serif;
      font-weight: 500;
      font-size: 0.875rem;
      color: #ffffff;
      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
      box-shadow: 0 2px 8px rgba(66, 133, 244, 0.3);
      text-transform: none;
      letter-spacing: 0.01em;
    }

    .material-btn-primary:hover {
      background: linear-gradient(135deg, #3367d6 0%, #1557b0 100%);
      box-shadow: 0 4px 12px rgba(66, 133, 244, 0.4);
      transform: translateY(-1px);
    }

    .material-btn-secondary {
      background: #ffffff;
      border: 1px solid rgba(0, 0, 0, 0.12);
      border-radius: 20px;
      padding: 12px 24px;
      font-family: 'Google Sans', 'Roboto', sans-serif;
      font-weight: 500;
      font-size: 0.875rem;
      color: #202124;
      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
    }

    .material-btn-secondary:hover {
      background: #f8f9fa;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.12);
      transform: translateY(-1px);
    }

    .material-btn-warning {
      background: linear-gradient(135deg, #fbbc05 0%, #f9ab00 100%);
      border: none;
      border-radius: 20px;
      padding: 12px 24px;
      font-family: 'Google Sans', 'Roboto', sans-serif;
      font-weight: 500;
      font-size: 0.875rem;
      color: #202124;
      transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
      box-shadow: 0 2px 8px rgba(251, 188, 5, 0.3);
      text-transform: none;
      letter-spacing: 0.01em;
    }

    .material-btn-warning:hover {
      background: linear-gradient(135deg, #f57c00 0%, #ef6c00 100%);
      box-shadow: 0 4px 12px rgba(251, 188, 5, 0.4);
      transform: translateY(-1px);
    }

    /* Responsive adjustments for Material modals */
    @media (max-width: 576px) {
      .material-modal {
        margin: 16px;
        border-radius: 20px;
      }

      .material-header, .material-body, .material-footer {
        padding: 20px;
      }

      .material-title {
        font-size: 1.25rem;
      }

      .material-input, .material-textarea, .material-select {
        padding: 14px 16px;
        font-size: 0.875rem;
      }

      .material-btn-primary, .material-btn-secondary, .material-btn-warning {
        padding: 10px 20px;
        font-size: 0.8125rem;
      }
    }
  </style>
</head>
<body>

  <!-- Replace navbar partial with explicit navbar markup to match requested design -->
  <nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm sticky-top">
    <div class="container">
      <a class="navbar-brand fw-semibold" href="/">
        <i class="bi bi-check2-circle me-2"></i>TodoPro
      </a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNav">
        <span class="navbar-toggler-icon"></span>
      </button>

      <div id="mainNav" class="collapse navbar-collapse">
        <ul class="navbar-nav ms-auto align-items-lg-center gap-lg-2">
          <% if (user) { %>
            <li class="nav-item"><a class="nav-link" href="/dashboard"><i class="bi bi-house-door me-1"></i>Home</a></li>
            <li class="nav-item"><a class="nav-link" href="/connect"><i class="bi bi-people me-1"></i>Connect</a></li>
            <li class="nav-item"><a class="nav-link" href="/visualize"><i class="bi bi-bar-chart me-1"></i>Visualize</a></li>
            <li class="nav-item"><a class="nav-link" href="/profile"><i class="bi bi-person me-1"></i>Profile</a></li>
            <li class="nav-item">
              <a class="btn btn-outline-danger ms-lg-2" href="/logout">
                <i class="bi bi-box-arrow-right me-1"></i>Logout
              </a>
            </li>
          <% } else { %>
            <li class="nav-item"><a class="nav-link" href="/signin">Sign in</a></li>
            <li class="nav-item">
              <a class="btn btn-primary ms-lg-2" href="/signup">
                <i class="bi bi-person-plus me-1"></i>Create account
              </a>
            </li>
          <% } %>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container-fluid main-container">
    <!-- Add Task Section at Top -->
    <div class="row mb-4">
      <div class="col-12">
        <div class="card">
          <div class="card-header d-flex align-items-center">
            <span>Add a New Task</span>
            <div class="ai-suggestions ms-auto">
              <button class="ai-toggle-btn active" id="aiToggleBtn" title="Toggle AI Suggestions">
                <i class="fas fa-brain ai-icon" id="aiIcon"></i>
                <div class="ai-status-indicator"></div>
              </button>
              <span class="ai-tooltip" id="aiTooltip">AI Suggestions Active</span>
            </div>
          </div>
          <div class="card-body">
            <div class="d-grid gap-3">
              <button type="button" class="btn btn-primary btn-lg" data-bs-toggle="modal" data-bs-target="#normalTaskModal">
                <i class="fas fa-plus me-2"></i> Add Task
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Task Counts Section -->
    <div class="row mb-4 text-center">
      <%
        const totalTasks = tasks.length;
        const completedTasks = tasks.filter(task => task.status === 'completed').length;
        const pendingTasks = totalTasks - completedTasks;
      %>
      <div class="col-md-4 mb-3">
        <div class="card p-2" style="border: 1px solid var(--success-color); background: rgba(232, 245, 232, 0.3);">
          <div class="d-flex align-items-center justify-content-center">
            <i class="fas fa-check-circle me-2" style="color: var(--success-color); font-size: 1.2rem;"></i>
            <div>
              <h5 class="mb-0 fw-bold" style="color: var(--success-color);"><%= completedTasks %></h5>
              <small class="text-muted">Completed</small>
            </div>
          </div>
        </div>
      </div>
      <div class="col-md-4 mb-3">
        <div class="card p-2" style="border: 1px solid var(--warning-color); background: rgba(255, 249, 196, 0.3);">
          <div class="d-flex align-items-center justify-content-center">
            <i class="fas fa-clock me-2" style="color: var(--warning-color); font-size: 1.2rem;"></i>
            <div>
              <h5 class="mb-0 fw-bold" style="color: var(--warning-color);"><%= pendingTasks %></h5>
              <small class="text-muted">Pending</small>
            </div>
          </div>
        </div>
      </div>
      <div class="col-md-4 mb-3">
        <div class="card p-2" style="border: 1px solid var(--primary-color); background: rgba(232, 242, 255, 0.3);">
          <div class="d-flex align-items-center justify-content-center">
            <i class="fas fa-list me-2" style="color: var(--primary-color); font-size: 1.2rem;"></i>
            <div>
              <h5 class="mb-0 fw-bold" style="color: var(--primary-color);"><%= totalTasks %></h5>
              <small class="text-muted">Total</small>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Tasks Section Side by Side -->
    <div class="row justify-content-center">
      <div class="col-md-6">
        <div class="card mb-4">
          <div class="card-header">
            All Your Tasks
          </div>
          <div class="card-body">
            <form action="/dashboard" method="GET" class="mb-4">
              <div class="input-group">
                <input type="text" class="form-control" name="search" placeholder="Search tasks by title, tag, or description..." value="<%= typeof search !== 'undefined' ? search : '' %>">
                <button class="btn btn-primary" type="submit"><i class="fas fa-search"></i> Search</button>
              </div>
            </form>

            <div class="filter-sort-bar d-flex flex-column flex-md-row justify-content-between align-items-center mb-4">
              <h6 class="mb-2 mb-md-0 me-3">Filter & Sort:</h6>
              <div class="d-flex flex-grow-1 flex-wrap gap-2">
                <a href="/dashboard" class="btn btn-sm <%= typeof filterBy === 'undefined' && typeof search === 'undefined' ? 'btn-primary' : 'btn-outline-primary' %> rounded-pill">All</a>
                <a href="/dashboard?filterBy=pending" class="btn btn-sm <%= filterBy === 'pending' ? 'btn-warning' : 'btn-outline-warning' %> rounded-pill">Pending</a>
                <a href="/dashboard?filterBy=completed" class="btn btn-sm <%= filterBy === 'completed' ? 'btn-success' : 'btn-outline-success' %> rounded-pill">Completed</a>
                <a href="/dashboard?sortBy=priority" class="btn btn-sm <%= sortBy === 'priority' ? 'btn-secondary' : 'btn-outline-secondary' %> rounded-pill">Priority</a>
                <a href="/dashboard?sortBy=deadline" class="btn btn-sm <%= sortBy === 'deadline' ? 'btn-secondary' : 'btn-outline-secondary' %> rounded-pill">Deadline</a>
              </div>
            </div>

            <% if (tasks.length === 0) { %>
              <div class="text-center text-muted py-5">
                <i class="fas fa-clipboard-list fa-3x mb-3"></i>
                <p>No tasks found.</p>
              </div>
            <% } else { %>
              <ul class="task-list">
                <% tasks.forEach(task => { %>
                  <li class="task-item">
                    <div class="task-content">
                      <div class="d-flex align-items-center mb-1">
                        <% if (task.priority) { %>
                            <span class="badge-priority badge-<%= task.priority.toLowerCase() %> me-2"><%= task.priority %></span>
                        <% } else { %>
                            <span class="badge-priority badge-low me-2">Low</span>
                        <% } %>
                        <h5 class="task-title mb-0 <%= task.status === 'completed' ? 'completed' : '' %>">
                          <%= task.title %>
                        </h5>
                      </div>
                      <% if (task.description) { %>
                        <div class="task-description mt-2 text-muted">
                          <%= task.description %>
                        </div>
                      <% } %>
                      <div class="task-meta mt-2">
                      <span><i class="fas fa-calendar-plus"></i> Created: <%= task.createdAt.toLocaleString() %></span>

                      <% if (task.deadline) { %>
                        <br>
                        <span class="text-danger"><i class="fas fa-clock"></i> Deadline: <%= task.deadline.toLocaleString() %></span>
                      <% } %>


                      <% if (task.status === 'completed' && task.completedAt) { %>
                        <br>
                        <span class="text-success"><i class="fas fa-check-circle"></i> Completed: <%= task.completedAt.toLocaleString() %></span>
                      <% } %>

                      <% if (task.tags && task.tags.length > 0) { %>
                        <div class="mt-2">
                          <% task.tags.forEach(tag => { %>
                            <span class="tag-pill"><%= tag %></span>
                          <% }) %>
                        </div>
                      <% } %>
                      </div>

                      <% if (task.attachment && task.attachment.filePath) { %>
                        <div class="mt-2">
                          <a href="<%= task.attachment.filePath %>" class="btn btn-outline-info btn-sm" target="_blank">
                            <i class="fas fa-paperclip"></i> View Attachment
                          </a>
                        </div>
                      <% } %>
                    </div>
                    <div class="actions-group d-flex gap-2">
                      <% if (task.status !== 'completed') { %>
                        <a href="#" onclick="event.preventDefault(); document.getElementById('complete-form-<%= task._id %>').submit();" class="btn btn-sm btn-success rounded-circle" title="Mark Complete">
                          <i class="fas fa-check"></i>
                        </a>
                        <form id="complete-form-<%= task._id %>" action="/tasks/complete/<%= task._id %>" method="POST" style="display: none;"></form>
                      <% } %>
                      <button class="btn btn-sm btn-info text-white rounded-circle" data-bs-toggle="modal" data-bs-target="#editModal<%= task._id %>" title="Edit Task">
                        <i class="fas fa-edit"></i>
                      </button>
                      <a href="#" onclick="event.preventDefault(); if(confirm('Are you sure you want to delete this task? This action cannot be undone.')) { document.getElementById('delete-form-<%= task._id %>').submit(); }" class="btn btn-sm btn-danger rounded-circle" title="Delete Task">
                        <i class="fas fa-trash-alt"></i>
                      </a>
                      <form id="delete-form-<%= task._id %>" action="/tasks/delete/<%= task._id %>" method="POST" style="display: none;"></form>
                    </div>
                  </li>
                  <!-- Edit Modal for Personal Tasks -->
                  <div class="modal fade" id="editModal<%= task._id %>" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog">
                      <div class="modal-content">
                        <div class="modal-header">
                          <h5 class="modal-title">Edit Task</h5>
                          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <form action="/tasks/edit/<%= task._id %>" method="POST">
                          <div class="modal-body d-grid gap-3">
                            <label class="form-label">Title</label>
                            <input type="text" name="title" class="form-control" value="<%= task.title %>" required>

                            <label class="form-label">Description</label>
                            <textarea name="description" class="form-control" rows="3"><%= task.description %></textarea>

                            <label class="form-label">Tags</label>
                            <input type="text" name="tags" class="form-control" value="<%= task.tags ? task.tags.join(', ') : '' %>">

                            <label class="form-label">Priority</label>
                            <select name="priority" class="form-select">
                              <option value="Low" <%= task.priority === 'Low' ? 'selected' : '' %>>Low Priority</option>
                              <option value="Medium" <%= task.priority === 'Medium' ? 'selected' : '' %>>Medium Priority</option>
                              <option value="High" <%= task.priority === 'High' ? 'selected' : '' %>>High Priority</option>
                            </select>

                            <% if (task.deadline) { %>
                              <label for="edit-deadline-<%= task._id %>" class="form-label">Deadline</label>
                              <input type="datetime-local" name="deadline" id="edit-deadline-<%= task._id %>" class="form-control" value="<%= task.deadline.toISOString().slice(0, 16) %>">
                            <% } %>
                          </div>
                          <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Save</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                          </div>
                        </form>
                      </div>
                    </div>
                  </div>
                <% }) %>
              </ul>
            <% } %>
          </div>
        </div>
      </div>

      <div class="col-md-6">
        <div class="card mb-4">
          <div class="card-header">
            Shared Tasks You've Sent
          </div>
          <div class="card-body">
            <% if (sentTasks.length === 0) { %>
              <div class="text-center text-muted py-5">
                <i class="fas fa-share-alt fa-3x mb-3"></i>
                <p>You have not sent any shared tasks yet.</p>
              </div>
            <% } else { %>
              <ul class="task-list">
                <% sentTasks.forEach(task => { %>
                  <li class="task-item">
                    <div class="task-content">
                      <h5 class="task-title mb-0 <%= task.completed ? 'completed' : '' %>">
                        <%= task.task %>
                      </h5>
                      <div class="task-meta mt-2">
                        <!-- Corrected Line -->
                        <% if (task.room && task.room.name) { %>
                          <span><i class="fas fa-chalkboard-teacher"></i> Room: <%= task.room.name %></span>
                          <br>
                        <% } %>
                        <% if (task.createdAt) { %>
                            <span><i class="fas fa-calendar-plus"></i> Sent: <%= task.createdAt.toLocaleString() %></span>
                        <% } else { %>
                            <span><i class="fas fa-calendar-plus"></i> Sent: Not Available</span>
                        <% } %>
                        <% if (task.completed) { %>
                          <br>
                          <span class="text-success"><i class="fas fa-check-circle"></i> Status: Completed</span>
                        <% } else { %>
                          <br>
                          <span class="text-warning"><i class="fas fa-sync"></i> Status: Pending</span>
                        <% } %>
                        <% if (task.deadline) { %>
                          <br>
                          <span class="text-danger"><i class="fas fa-clock"></i> Deadline: <%= task.deadline.toLocaleString() %></span>
                        <% } %>
                        <% if (task.attachment && task.attachment.filePath) { %>
                          <div class="mt-2">
                            <a href="<%= task.attachment.filePath %>" class="btn btn-outline-info btn-sm" target="_blank">
                              <i class="fas fa-paperclip"></i> View Attachment
                            </a>
                          </div>
                        <% } %>
                      </div>
                    </div>
                    <div class="actions-group d-flex gap-2">
                        <button class="btn btn-sm btn-info text-white rounded-circle" data-bs-toggle="modal" data-bs-target="#editSharedModal<%= task._id %>" title="Edit Shared Task">
                            <i class="fas fa-edit"></i>
                        </button>
                        <a href="#" onclick="event.preventDefault(); if(confirm('Are you sure you want to delete this shared task? This action cannot be undone.')) { document.getElementById('delete-shared-form-<%= task._id %>').submit(); }" class="btn btn-sm btn-danger rounded-circle" title="Delete Shared Task">
                            <i class="fas fa-trash-alt"></i>
                        </a>
                        <form id="delete-shared-form-<%= task._id %>" action="/rooms/delete-shared-task/<%= task._id %>" method="POST" style="display: none;"></form>
                    </div>
                  </li>
                  <!-- Edit Modal for Shared Tasks -->
                  <div class="modal fade" id="editSharedModal<%= task._id %>" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog">
                      <div class="modal-content">
                        <div class="modal-header">
                          <h5 class="modal-title">Edit Shared Task</h5>
                          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <form action="/rooms/edit-shared-task/<%= task._id %>" method="POST">
                          <div class="modal-body d-grid gap-3">
                            <label class="form-label">Title</label>
                            <input type="text" name="task" class="form-control" value="<%= task.task %>" required>

                            <label class="form-label">Description</label>
                            <textarea name="description" class="form-control" rows="3"><%= task.description %></textarea>

                            <label class="form-label">Tags</label>
                            <input type="text" name="tags" class="form-control" value="<%= task.tags ? task.tags.join(', ') : '' %>">
                          
                            <label class="form-label">Priority</label>
                            <select name="priority" class="form-select">
                              <option value="Low" <%= task.priority === 'Low' ? 'selected' : '' %>>Low Priority</option>
                              <option value="Medium" <%= task.priority === 'Medium' ? 'selected' : '' %>>Medium Priority</option>
                              <option value="High" <%= task.priority === 'High' ? 'selected' : '' %>>High Priority</option>
                            </select>
                            <label for="shared-deadline-<%= task._id %>" class="form-label mt-2">Update Deadline:</label>
                            <input type="datetime-local" name="deadline" id="shared-deadline-<%= task._id %>" class="form-control" value="<%= task.deadline ? task.deadline.toISOString().slice(0, 16) : '' %>">
                          </div>
                          <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Save</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                          </div>
                        </form>
                      </div>
                    </div>
                  </div>
                <% }) %>
              </ul>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Normal Task Modal -->
  <div class="modal fade" id="normalTaskModal" tabindex="-1" aria-labelledby="normalTaskModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content material-modal">
        <div class="modal-header material-header">
          <h5 class="modal-title material-title" id="normalTaskModalLabel">
            <i class="fas fa-plus me-2"></i>Add Task
          </h5>
          <button type="button" class="btn-close material-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form action="/tasks/add-deadline" method="POST" enctype="multipart/form-data">
          <div class="modal-body material-body">
            <div class="position-relative">
              <label class="form-label material-label">Task Title</label>
              <div class="d-flex gap-2">
                <input type="text" name="title" id="modalTaskTitle" class="form-control material-input" placeholder="Task title..." required autocomplete="off">
              </div>
            <div id="modalSuggestionsDropdown" class="suggestions-dropdown">
              <!-- AI suggestions will appear here -->
            </div>
          </div>
            <div>
              <label class="form-label material-label">Description</label>
              <textarea name="description" class="form-control material-textarea" rows="3" placeholder="Task description..."></textarea>
            </div>
            <div>
              <label class="form-label material-label">Tags</label>
              <input type="text" name="tags" class="form-control material-input" placeholder="Tags (e.g., work, personal)">
            </div>
            <div>
              <label class="form-label material-label">Priority</label>
              <select name="priority" class="form-select material-select">
                <option value="Medium">Medium Priority</option>
                <option value="High">High Priority</option>
                <option value="Low">Low Priority</option>
              </select>
            </div>
            <div>
              <label class="form-label material-label">Deadline (Optional)</label>
              <input type="datetime-local" name="deadline" class="form-control material-input">
            </div>
            <div>
              <label for="modalAttachment" class="form-label material-label">Optional Attachment</label>
              <input type="file" name="attachment" id="modalAttachment" class="form-control material-input">
            </div>
          </div>
          <div class="modal-footer material-footer">
            <button type="button" class="btn material-btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn material-btn-primary">
              <i class="fas fa-plus me-1"></i>Add Task
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>



  <%- include('./partials/footer.ejs') %>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Enhanced animations and interactions
    document.addEventListener('DOMContentLoaded', function() {
      // Stagger animation for task items
      const taskItems = document.querySelectorAll('.task-item');
      taskItems.forEach((item, index) => {
        item.style.opacity = '0';
        item.style.transform = 'translateY(20px)';
        setTimeout(() => {
          item.style.transition = 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)';
          item.style.opacity = '1';
          item.style.transform = 'translateY(0)';
        }, index * 100);
      });

      // Enhanced button interactions
      const actionButtons = document.querySelectorAll('.actions-group .btn');
      actionButtons.forEach(btn => {
        btn.addEventListener('click', function(e) {
          this.style.transform = 'scale(0.95)';
          setTimeout(() => {
            this.style.transform = '';
          }, 150);
        });
      });

      // Smooth scroll for filter buttons
      const filterButtons = document.querySelectorAll('.filter-sort-bar .btn');
      filterButtons.forEach(btn => {
        btn.addEventListener('click', function() {
          this.style.transform = 'scale(0.95)';
          setTimeout(() => {
            this.style.transform = '';
          }, 150);
        });
      });

      // Countdown timers for deadline tasks
      const countdownElements = document.querySelectorAll('.countdown');
      countdownElements.forEach(el => {
        const deadline = new Date(el.getAttribute('data-deadline'));
        const interval = setInterval(() => {
          const now = new Date();
          const diff = deadline - now;
          if (diff <= 0) {
            el.innerText = '⏳ Expired';
            el.classList.add('text-danger', 'fw-bold');
            clearInterval(interval);
            return;
          }
          const hours = Math.floor(diff / (1000 * 60 * 60));
          const minutes = Math.floor((diff / (1000 * 60)) % 60);
          const seconds = Math.floor((diff / 1000) % 60);
          el.innerText = `${hours}h ${minutes}m ${seconds}s`;

          // Add warning color when less than 24 hours
          if (diff < 24 * 60 * 60 * 1000) {
            el.classList.add('text-warning');
          }
        }, 1000);
      });

      // Add loading state for forms
      const forms = document.querySelectorAll('form');
      forms.forEach(form => {
        form.addEventListener('submit', function() {
          const submitBtn = this.querySelector('button[type="submit"]');
          if (submitBtn) {
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
            submitBtn.disabled = true;
          }
        });
      });

      // Enhanced search functionality
      const searchInput = document.querySelector('input[name="search"]');
      if (searchInput) {
        let searchTimeout;
        searchInput.addEventListener('input', function() {
          clearTimeout(searchTimeout);
          searchTimeout = setTimeout(() => {
            if (this.value.length > 0) {
              this.parentElement.querySelector('button').innerHTML = '<i class="fas fa-search"></i> Searching...';
            } else {
              this.parentElement.querySelector('button').innerHTML = '<i class="fas fa-search"></i> Search';
            }
          }, 300);
        });
      }

      // AI Suggestions functionality
      const taskTitleInput = document.getElementById('modalTaskTitle');
      const suggestionsDropdown = document.getElementById('modalSuggestionsDropdown');
      const aiIcon = document.getElementById('aiIcon');
      const aiToggleBtn = document.getElementById('aiToggleBtn');
      const aiTooltip = document.getElementById('aiTooltip');
      const normalTaskModal = document.getElementById('normalTaskModal');
      let suggestionTimeout;
      let aiEnabled = true; // Default to enabled

      // AI Toggle functionality
      aiToggleBtn.addEventListener('click', function() {
        aiEnabled = !aiEnabled;
        if (aiEnabled) {
          this.classList.add('active');
          this.classList.remove('disabled');
          aiTooltip.textContent = 'AI Suggestions Active';
          document.body.classList.add('ai-enabled');
        } else {
          this.classList.remove('active');
          this.classList.add('disabled');
          aiTooltip.textContent = 'AI Suggestions Disabled';
          suggestionsDropdown.classList.remove('show');
          document.body.classList.remove('ai-enabled');
        }
      });

      // Input listener for suggestions
      taskTitleInput.addEventListener('input', function() {
        clearTimeout(suggestionTimeout);
        if (!aiEnabled || this.value.length < 2) {
          suggestionsDropdown.classList.remove('show');
          return;
        }
        suggestionTimeout = setTimeout(() => {
          fetchSuggestions(this.value);
        }, 500); // Debounce
      });

      // Fetch suggestions from API
      function fetchSuggestions(title) {
        fetch(`/api/ai/suggestions?title=${encodeURIComponent(title)}`)
          .then(response => response.json())
          .then(data => {
            displaySuggestions(data.suggestions);
          })
          .catch(error => {
            console.error('Error fetching suggestions:', error);
            suggestionsDropdown.classList.remove('show');
          });
      }

      // Display suggestions in dropdown
      function displaySuggestions(suggestions) {
        suggestionsDropdown.innerHTML = '';
        if (suggestions.length === 0) {
          suggestionsDropdown.classList.remove('show');
          return;
        }
        suggestions.forEach(suggestion => {
          const item = document.createElement('div');
          item.className = 'suggestion-item';
          item.innerHTML = `
            <div class="suggestion-content">
              <div class="suggestion-header">
                <i class="fas fa-lightbulb suggestion-icon"></i>
                <span class="suggestion-text">${suggestion.title}</span>
                <span class="suggestion-type">${suggestion.priority}</span>
              </div>
              ${suggestion.description ? `<div class="suggestion-description">${suggestion.description}</div>` : ''}
              ${suggestion.tags && suggestion.tags.length > 0 ? `<div class="suggestion-tags">${suggestion.tags.map(tag => `<span class="tag-pill">${tag}</span>`).join('')}</div>` : ''}
            </div>
          `;
          item.addEventListener('click', () => {
            fillForm(suggestion);
            suggestionsDropdown.classList.remove('show');
          });
          suggestionsDropdown.appendChild(item);
        });
        suggestionsDropdown.classList.add('show');
      }

      // Fill form with selected suggestion
      function fillForm(suggestion) {
        taskTitleInput.value = suggestion.title;
        const descriptionTextarea = normalTaskModal.querySelector('textarea[name="description"]');
        if (descriptionTextarea && suggestion.description) {
          descriptionTextarea.value = suggestion.description;
        }
        const tagsInput = normalTaskModal.querySelector('input[name="tags"]');
        if (tagsInput && suggestion.tags) {
          tagsInput.value = suggestion.tags.join(', ');
        }
        const prioritySelect = normalTaskModal.querySelector('select[name="priority"]');
        if (prioritySelect && suggestion.priority) {
          prioritySelect.value = suggestion.priority;
        }
      }

      // Close dropdown when modal is hidden
      normalTaskModal.addEventListener('hidden.bs.modal', function() {
        suggestionsDropdown.classList.remove('show');
      });

      // Close dropdown when clicking outside
      document.addEventListener('click', function(e) {
        if (!suggestionsDropdown.contains(e.target) && !taskTitleInput.contains(e.target)) {
          suggestionsDropdown.classList.remove('show');
        }
      });

      // Initialize AI state
      if (aiEnabled) {
        aiToggleBtn.classList.add('active');
        document.body.classList.add('ai-enabled');
      }

    });
  </script>
</body>
</html>
