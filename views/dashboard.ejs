<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>TodoPro Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    /* Enhanced Google-inspired design principles */
    :root {
      --primary-color: #4285f4;
      --primary-hover: #357ae8;
      --primary-light: #e8f2ff;
      --secondary-color: #fbbc05;
      --secondary-hover: #f5b300;
      --success-color: #34a853;
      --success-light: #e8f5e8;
      --danger-color: #ea4335;
      --danger-light: #fce8e6;
      --warning-color: #fbbc05;
      --background-color: #f8f9fa;
      --background-gradient: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
      --card-bg: #ffffff;
      --card-gradient: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
      --text-color: #3c4043;
      --text-secondary: #5f6368;
      --light-text-color: #70757a;
      --border-color: #e0e0e0;
      --shadow-sm: 0 1px 2px rgba(60,64,67,.3), 0 1px 3px rgba(60,64,67,.15);
      --shadow-md: 0 2px 4px rgba(60,64,67,.1), 0 1px 3px rgba(60,64,67,.1);
      --shadow-lg: 0 4px 8px rgba(60,64,67,.12), 0 2px 4px rgba(60,64,67,.08);
      --shadow-xl: 0 8px 16px rgba(60,64,67,.15), 0 4px 8px rgba(60,64,67,.1);
      --border-radius: 12px;
      --border-radius-lg: 16px;
      --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      --transition-fast: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
      --accent-color: #ea4335;
      --info-color: #0dcaf0;
    }
    body {
      background: var(--background-gradient);
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
      color: var(--text-color);
      line-height: 1.6;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      scroll-behavior: smooth;
    }

    /* Navbar styling removed to use standard navbar partial */

    .main-container {
      padding: 2rem 1rem;
      max-width: 1400px;
      margin: 0 auto;
    }

    /* Enhanced responsive design */
    @media (max-width: 576px) {
      .main-container {
        padding: 1rem 0.5rem;
      }
    }

    @media (min-width: 768px) {
      .main-container {
        padding: 2rem 1.5rem;
      }
    }

    @media (min-width: 1200px) {
      .main-container {
        padding: 2.5rem 2rem;
      }
    }
    .card {
      border: none;
      border-radius: var(--border-radius);
      box-shadow: var(--shadow-sm);
      background: var(--card-gradient);
      transition: var(--transition);
    }
    .card:hover {
      box-shadow: var(--shadow-lg);
      transform: translateY(-4px);
    }
    .card-header {
      background-color: transparent;
      border-bottom: 1px solid #e0e0e0;
      font-size: 1.25rem;
      font-weight: 600;
      color: var(--text-color);
      padding: 1.25rem 1.5rem;
    }
    .btn-primary {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
      font-weight: 500;
      border-radius: 8px;
    }
    .btn-primary:hover {
      background-color: #357ae8;
      border-color: #357ae8;
    }
    .btn-warning {
      background-color: var(--secondary-color);
      border-color: var(--secondary-color);
      color: var(--text-color);
      font-weight: 500;
      border-radius: 8px;
    }
    .btn-warning:hover {
      background-color: #f5b300;
      border-color: #f5b300;
    }
    .form-control, .form-select {
      border-radius: 8px;
      padding: 0.75rem 1rem;
    }
    .task-list {
      list-style: none;
      padding: 0;
    }
    .task-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1.25rem 1.5rem;
      background: var(--card-gradient);
      border: 1px solid var(--border-color);
      border-radius: var(--border-radius);
      margin-bottom: 1rem;
      transition: var(--transition);
      position: relative;
      overflow: hidden;
    }

    .task-item::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 4px;
      height: 100%;
      background: var(--primary-color);
      opacity: 0;
      transition: var(--transition-fast);
    }

    .task-item:hover {
      box-shadow: var(--shadow-lg);
      transform: translateY(-2px);
      border-color: var(--primary-color);
    }

    .task-item:hover::before {
      opacity: 1;
    }

    .task-item.completed {
      opacity: 0.7;
      background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    }

    .task-item.completed:hover {
      opacity: 0.8;
    }
    .task-content {
      flex-grow: 1;
    }
    .task-title {
      font-size: 1.1rem;
      font-weight: 500;
      margin-bottom: 0.25rem;
    }
    .task-meta {
      font-size: 0.85rem;
      color: var(--light-text-color);
    }
    .badge-priority {
      font-size: 0.75rem;
      padding: 0.4em 0.8em;
      border-radius: 12px;
      font-weight: 600;
      margin-right: 8px;
    }
    .badge-high { background-color: var(--danger-color); color: #fff; }
    .badge-medium { background-color: var(--secondary-color); color: #fff; }
    .badge-low { background-color: var(--primary-color); color: #fff; }
    .tag-pill {
      display: inline-block;
      background-color: #e8e8e8;
      color: #5f6368;
      padding: 0.25rem 0.75rem;
      border-radius: 12px;
      font-size: 0.75rem;
      margin-right: 5px;
      margin-top: 5px;
    }
    .actions-group .btn {
      border-radius: 50%;
      width: 40px;
      height: 40px;
      padding: 0;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      transition: var(--transition-fast);
      position: relative;
      overflow: hidden;
    }

    .actions-group .btn::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 0;
      height: 0;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 50%;
      transform: translate(-50%, -50%);
      transition: var(--transition-fast);
    }

    .actions-group .btn:hover::before {
      width: 100%;
      height: 100%;
    }

    .actions-group .btn:hover {
      transform: scale(1.1);
      box-shadow: var(--shadow-md);
    }

    .actions-group .btn-success:hover {
      background-color: var(--success-color);
      border-color: var(--success-color);
    }

    .actions-group .btn-info:hover {
      background-color: #0dcaf0;
      border-color: #0dcaf0;
    }

    .actions-group .btn-danger:hover {
      background-color: var(--danger-color);
      border-color: var(--danger-color);
    }
    .task-title.completed {
      text-decoration: line-through;
      color: var(--light-text-color);
    }
    .modal-content {
      border-radius: 12px;
    }
    .modal-header {
      border-bottom: none;
    }
    .modal-footer {
      border-top: none;
    }
    .filter-sort-bar {
      background-color: var(--card-bg);
      padding: 1.5rem;
      border-radius: 12px;
      box-shadow: var(--shadow-sm);
      margin-bottom: 1.5rem;
    }
    @media (min-width: 992px) {
      .main-container {
        padding: 2rem;
      }
    }
  </style>
</head>
<body>

  <!-- Replace navbar partial with explicit navbar markup to match requested design -->
  <nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm sticky-top">
    <div class="container">
      <a class="navbar-brand fw-semibold" href="/">
        <i class="bi bi-check2-circle me-2"></i>TodoPro
      </a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#mainNav">
        <span class="navbar-toggler-icon"></span>
      </button>

      <div id="mainNav" class="collapse navbar-collapse">
        <ul class="navbar-nav ms-auto align-items-lg-center gap-lg-2">
          <% if (user) { %>
            <li class="nav-item"><a class="nav-link" href="/dashboard"><i class="bi bi-house-door me-1"></i>Home</a></li>
            <li class="nav-item"><a class="nav-link" href="/connect"><i class="bi bi-people me-1"></i>Connect</a></li>
            <li class="nav-item"><a class="nav-link" href="/visualize"><i class="bi bi-bar-chart me-1"></i>Visualize</a></li>
            <li class="nav-item"><a class="nav-link" href="/profile"><i class="bi bi-person me-1"></i>Profile</a></li>
            <li class="nav-item">
              <a class="btn btn-outline-danger ms-lg-2" href="/logout">
                <i class="bi bi-box-arrow-right me-1"></i>Logout
              </a>
            </li>
          <% } else { %>
            <li class="nav-item"><a class="nav-link" href="/signin">Sign in</a></li>
            <li class="nav-item">
              <a class="btn btn-primary ms-lg-2" href="/signup">
                <i class="bi bi-person-plus me-1"></i>Create account
              </a>
            </li>
          <% } %>
        </ul>
      </div>
    </div>
  </nav>

  <div class="container-fluid main-container">
    <div class="row">

      <div class="col-lg-4 mb-4">
        <div class="card h-100">
          <div class="card-header">
            Add a New Task
          </div>
          <div class="card-body">
            <h6 class="card-subtitle mb-3 text-muted">Normal Task</h6>
            <form action="/tasks/add" method="POST" class="d-grid gap-3 mb-4">
              <input type="text" name="title" class="form-control" placeholder="Task title..." required>
              <textarea name="description" class="form-control" rows="3" placeholder="Task description..."></textarea>
              <input type="text" name="tags" class="form-control" placeholder="Tags (e.g., work, personal)">
              <select name="priority" class="form-select">
                <option value="Medium">Medium Priority</option>
                <option value="High">High Priority</option>
                <option value="Low">Low Priority</option>
              </select>
              <button type="submit" class="btn btn-primary btn-block">
                <i class="fas fa-plus"></i> Add Normal Task
              </button>
            </form>
            <h6 class="card-subtitle mb-3 text-muted">Task with Deadline</h6>
            <form action="/tasks/add-deadline" method="POST" class="d-grid gap-3" enctype="multipart/form-data">
              <input type="text" name="title" class="form-control" placeholder="Task title..." required>
              <textarea name="description" class="form-control" rows="3" placeholder="Task description..."></textarea>
              <input type="text" name="tags" class="form-control" placeholder="Tags (e.g., work, personal)">
              <select name="priority" class="form-select">
                <option value="Medium">Medium Priority</option>
                <option value="High">High Priority</option>
                <option value="Low">Low Priority</option>
              </select>
              <input type="datetime-local" name="deadline" class="form-control" required>
              <label for="attachment" class="form-label mt-2">Optional Attachment:</label>
              <input type="file" name="attachment" id="attachment" class="form-control">
              <button type="submit" class="btn btn-warning btn-block">
                <i class="fas fa-clock"></i> Add Deadline Task
              </button>
            </form>
          </div>
        </div>
      </div>

      <div class="col-lg-8">
        <div class="card mb-4">
          <div class="card-header">
            All Your Tasks
          </div>
          <div class="card-body">
            <form action="/dashboard" method="GET" class="mb-4">
              <div class="input-group">
                <input type="text" class="form-control" name="search" placeholder="Search tasks by title, tag, or description..." value="<%= typeof search !== 'undefined' ? search : '' %>">
                <button class="btn btn-primary" type="submit"><i class="fas fa-search"></i> Search</button>
              </div>
            </form>

            <div class="filter-sort-bar d-flex flex-column flex-md-row justify-content-between align-items-center mb-4">
              <h6 class="mb-2 mb-md-0 me-3">Filter & Sort:</h6>
              <div class="d-flex flex-grow-1 flex-wrap gap-2">
                <a href="/dashboard" class="btn btn-sm <%= typeof filterBy === 'undefined' && typeof search === 'undefined' ? 'btn-primary' : 'btn-outline-primary' %> rounded-pill">All</a>
                <a href="/dashboard?filterBy=pending" class="btn btn-sm <%= filterBy === 'pending' ? 'btn-warning' : 'btn-outline-warning' %> rounded-pill">Pending</a>
                <a href="/dashboard?filterBy=completed" class="btn btn-sm <%= filterBy === 'completed' ? 'btn-success' : 'btn-outline-success' %> rounded-pill">Completed</a>
                <a href="/dashboard?sortBy=priority" class="btn btn-sm <%= sortBy === 'priority' ? 'btn-secondary' : 'btn-outline-secondary' %> rounded-pill">Priority</a>
                <a href="/dashboard?sortBy=deadline" class="btn btn-sm <%= sortBy === 'deadline' ? 'btn-secondary' : 'btn-outline-secondary' %> rounded-pill">Deadline</a>
              </div>
            </div>

            <% if (tasks.length === 0) { %>
              <div class="text-center text-muted py-5">
                <i class="fas fa-clipboard-list fa-3x mb-3"></i>
                <p>No tasks found.</p>
              </div>
            <% } else { %>
              <ul class="task-list">
                <% tasks.forEach(task => { %>
                  <li class="task-item">
                    <div class="task-content">
                      <div class="d-flex align-items-center mb-1">
                        <% if (task.priority) { %>
                            <span class="badge-priority badge-<%= task.priority.toLowerCase() %> me-2"><%= task.priority %></span>
                        <% } else { %>
                            <span class="badge-priority badge-low me-2">Low</span>
                        <% } %>
                        <h5 class="task-title mb-0 <%= task.status === 'completed' ? 'completed' : '' %>">
                          <%= task.title %>
                        </h5>
                      </div>
                      <% if (task.description) { %>
                        <div class="task-description mt-2 text-muted">
                          <%= task.description %>
                        </div>
                      <% } %>
                      <div class="task-meta mt-2">
                      <span><i class="fas fa-calendar-plus"></i> Created: <%= task.createdAt.toLocaleString() %></span>

                      <% if (task.deadline) { %>
                        <br>
                        <span class="text-danger"><i class="fas fa-clock"></i> Deadline: <%= task.deadline.toLocaleString() %></span>
                      <% } %>


                      <% if (task.status === 'completed' && task.completedAt) { %>
                        <br>
                        <span class="text-success"><i class="fas fa-check-circle"></i> Completed: <%= task.completedAt.toLocaleString() %></span>
                      <% } %>

                      <% if (task.tags && task.tags.length > 0) { %>
                        <div class="mt-2">
                          <% task.tags.forEach(tag => { %>
                            <span class="tag-pill"><%= tag %></span>
                          <% }) %>
                        </div>
                      <% } %>
                      </div>

                      <% if (task.attachment && task.attachment.filePath) { %>
                        <div class="mt-2">
                          <a href="<%= task.attachment.filePath %>" class="btn btn-outline-info btn-sm" target="_blank">
                            <i class="fas fa-paperclip"></i> View Attachment
                          </a>
                        </div>
                      <% } %>
                    </div>
                    <div class="actions-group d-flex gap-2">
                      <% if (task.status !== 'completed') { %>
                        <a href="#" onclick="event.preventDefault(); document.getElementById('complete-form-<%= task._id %>').submit();" class="btn btn-sm btn-success rounded-circle" title="Mark Complete">
                          <i class="fas fa-check"></i>
                        </a>
                        <form id="complete-form-<%= task._id %>" action="/tasks/complete/<%= task._id %>" method="POST" style="display: none;"></form>
                      <% } %>
                      <button class="btn btn-sm btn-info text-white rounded-circle" data-bs-toggle="modal" data-bs-target="#editModal<%= task._id %>" title="Edit Task">
                        <i class="fas fa-edit"></i>
                      </button>
                      <a href="#" onclick="event.preventDefault(); if(confirm('Are you sure you want to delete this task? This action cannot be undone.')) { document.getElementById('delete-form-<%= task._id %>').submit(); }" class="btn btn-sm btn-danger rounded-circle" title="Delete Task">
                        <i class="fas fa-trash-alt"></i>
                      </a>
                      <form id="delete-form-<%= task._id %>" action="/tasks/delete/<%= task._id %>" method="POST" style="display: none;"></form>
                    </div>
                  </li>
                  <!-- Edit Modal for Personal Tasks -->
                  <div class="modal fade" id="editModal<%= task._id %>" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog">
                      <div class="modal-content">
                        <div class="modal-header">
                          <h5 class="modal-title">Edit Task</h5>
                          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <form action="/tasks/edit/<%= task._id %>" method="POST">
                          <div class="modal-body d-grid gap-3">
                            <label class="form-label">Title</label>
                            <input type="text" name="title" class="form-control" value="<%= task.title %>" required>

                            <label class="form-label">Description</label>
                            <textarea name="description" class="form-control" rows="3"><%= task.description %></textarea>

                            <label class="form-label">Tags</label>
                            <input type="text" name="tags" class="form-control" value="<%= task.tags ? task.tags.join(', ') : '' %>">

                            <label class="form-label">Priority</label>
                            <select name="priority" class="form-select">
                              <option value="Low" <%= task.priority === 'Low' ? 'selected' : '' %>>Low Priority</option>
                              <option value="Medium" <%= task.priority === 'Medium' ? 'selected' : '' %>>Medium Priority</option>
                              <option value="High" <%= task.priority === 'High' ? 'selected' : '' %>>High Priority</option>
                            </select>

                            <% if (task.deadline) { %>
                              <label for="edit-deadline-<%= task._id %>" class="form-label">Deadline</label>
                              <input type="datetime-local" name="deadline" id="edit-deadline-<%= task._id %>" class="form-control" value="<%= task.deadline.toISOString().slice(0, 16) %>">
                            <% } %>
                          </div>
                          <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Save</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                          </div>
                        </form>
                      </div>
                    </div>
                  </div>
                <% }) %>
              </ul>
            <% } %>
          </div>
        </div>

        <div class="card mt-4">
          <div class="card-header">
            Shared Tasks You've Sent
          </div>
          <div class="card-body">
            <% if (sentTasks.length === 0) { %>
              <div class="text-center text-muted py-5">
                <i class="fas fa-share-alt fa-3x mb-3"></i>
                <p>You have not sent any shared tasks yet.</p>
              </div>
            <% } else { %>
              <ul class="task-list">
                <% sentTasks.forEach(task => { %>
                  <li class="task-item">
                    <div class="task-content">
                      <h5 class="task-title mb-0 <%= task.completed ? 'completed' : '' %>">
                        <%= task.task %>
                      </h5>
                      <div class="task-meta mt-2">
                        <!-- Corrected Line -->
                        <% if (task.room && task.room.name) { %>
                          <span><i class="fas fa-chalkboard-teacher"></i> Room: <%= task.room.name %></span>
                          <br>
                        <% } %>
                        <% if (task.createdAt) { %>
                            <span><i class="fas fa-calendar-plus"></i> Sent: <%= task.createdAt.toLocaleString() %></span>
                        <% } else { %>
                            <span><i class="fas fa-calendar-plus"></i> Sent: Not Available</span>
                        <% } %>
                        <% if (task.completed) { %>
                          <br>
                          <span class="text-success"><i class="fas fa-check-circle"></i> Status: Completed</span>
                        <% } else { %>
                          <br>
                          <span class="text-warning"><i class="fas fa-sync"></i> Status: Pending</span>
                        <% } %>
                        <% if (task.deadline) { %>
                          <br>
                          <span class="text-danger"><i class="fas fa-clock"></i> Deadline: <%= task.deadline.toLocaleString() %></span>
                        <% } %>
                        <% if (task.attachment && task.attachment.filePath) { %>
                          <div class="mt-2">
                            <a href="<%= task.attachment.filePath %>" class="btn btn-outline-info btn-sm" target="_blank">
                              <i class="fas fa-paperclip"></i> View Attachment
                            </a>
                          </div>
                        <% } %>
                      </div>
                    </div>
                    <div class="actions-group d-flex gap-2">
                        <button class="btn btn-sm btn-info text-white rounded-circle" data-bs-toggle="modal" data-bs-target="#editSharedModal<%= task._id %>" title="Edit Shared Task">
                            <i class="fas fa-edit"></i>
                        </button>
                        <a href="#" onclick="event.preventDefault(); if(confirm('Are you sure you want to delete this shared task? This action cannot be undone.')) { document.getElementById('delete-shared-form-<%= task._id %>').submit(); }" class="btn btn-sm btn-danger rounded-circle" title="Delete Shared Task">
                            <i class="fas fa-trash-alt"></i>
                        </a>
                        <form id="delete-shared-form-<%= task._id %>" action="/rooms/delete-shared-task/<%= task._id %>" method="POST" style="display: none;"></form>
                    </div>
                  </li>
                  <!-- Edit Modal for Shared Tasks -->
                  <div class="modal fade" id="editSharedModal<%= task._id %>" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog">
                      <div class="modal-content">
                        <div class="modal-header">
                          <h5 class="modal-title">Edit Shared Task</h5>
                          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <form action="/rooms/edit-shared-task/<%= task._id %>" method="POST">
                          <div class="modal-body d-grid gap-3">
                            <label class="form-label">Title</label>
                            <input type="text" name="task" class="form-control" value="<%= task.task %>" required>

                            <label class="form-label">Description</label>
                            <textarea name="description" class="form-control" rows="3"><%= task.description %></textarea>

                            <label class="form-label">Tags</label>
                            <input type="text" name="tags" class="form-control" value="<%= task.tags ? task.tags.join(', ') : '' %>">
                          
                            <label class="form-label">Priority</label>
                            <select name="priority" class="form-select">
                              <option value="Low" <%= task.priority === 'Low' ? 'selected' : '' %>>Low Priority</option>
                              <option value="Medium" <%= task.priority === 'Medium' ? 'selected' : '' %>>Medium Priority</option>
                              <option value="High" <%= task.priority === 'High' ? 'selected' : '' %>>High Priority</option>
                            </select>
                            <label for="shared-deadline-<%= task._id %>" class="form-label mt-2">Update Deadline:</label>
                            <input type="datetime-local" name="deadline" id="shared-deadline-<%= task._id %>" class="form-control" value="<%= task.deadline ? task.deadline.toISOString().slice(0, 16) : '' %>">
                          </div>
                          <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Save</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                          </div>
                        </form>
                      </div>
                    </div>
                  </div>
                <% }) %>
              </ul>
            <% } %>
          </div>
        </div>

      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // Enhanced animations and interactions
    document.addEventListener('DOMContentLoaded', function() {
      // Stagger animation for task items
      const taskItems = document.querySelectorAll('.task-item');
      taskItems.forEach((item, index) => {
        item.style.opacity = '0';
        item.style.transform = 'translateY(20px)';
        setTimeout(() => {
          item.style.transition = 'all 0.5s cubic-bezier(0.4, 0, 0.2, 1)';
          item.style.opacity = '1';
          item.style.transform = 'translateY(0)';
        }, index * 100);
      });

      // Enhanced button interactions
      const actionButtons = document.querySelectorAll('.actions-group .btn');
      actionButtons.forEach(btn => {
        btn.addEventListener('click', function(e) {
          this.style.transform = 'scale(0.95)';
          setTimeout(() => {
            this.style.transform = '';
          }, 150);
        });
      });

      // Smooth scroll for filter buttons
      const filterButtons = document.querySelectorAll('.filter-sort-bar .btn');
      filterButtons.forEach(btn => {
        btn.addEventListener('click', function() {
          this.style.transform = 'scale(0.95)';
          setTimeout(() => {
            this.style.transform = '';
          }, 150);
        });
      });

      // Countdown timers for deadline tasks
      const countdownElements = document.querySelectorAll('.countdown');
      countdownElements.forEach(el => {
        const deadline = new Date(el.getAttribute('data-deadline'));
        const interval = setInterval(() => {
          const now = new Date();
          const diff = deadline - now;
          if (diff <= 0) {
            el.innerText = '⏳ Expired';
            el.classList.add('text-danger', 'fw-bold');
            clearInterval(interval);
            return;
          }
          const hours = Math.floor(diff / (1000 * 60 * 60));
          const minutes = Math.floor((diff / (1000 * 60)) % 60);
          const seconds = Math.floor((diff / 1000) % 60);
          el.innerText = `${hours}h ${minutes}m ${seconds}s`;

          // Add warning color when less than 24 hours
          if (diff < 24 * 60 * 60 * 1000) {
            el.classList.add('text-warning');
          }
        }, 1000);
      });

      // Add loading state for forms
      const forms = document.querySelectorAll('form');
      forms.forEach(form => {
        form.addEventListener('submit', function() {
          const submitBtn = this.querySelector('button[type="submit"]');
          if (submitBtn) {
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
            submitBtn.disabled = true;
          }
        });
      });

      // Enhanced search functionality
      const searchInput = document.querySelector('input[name="search"]');
      if (searchInput) {
        let searchTimeout;
        searchInput.addEventListener('input', function() {
          clearTimeout(searchTimeout);
          searchTimeout = setTimeout(() => {
            if (this.value.length > 0) {
              this.parentElement.querySelector('button').innerHTML = '<i class="fas fa-search"></i> Searching...';
            } else {
              this.parentElement.querySelector('button').innerHTML = '<i class="fas fa-search"></i> Search';
            }
          }, 300);
        });
      }
    });
  </script>
</body>
</html>
